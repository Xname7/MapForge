name: Build Release

on: 
  workflow_dispatch:

env:
  NET_FRAMEWORK_VERSION: "net48"
  PROJECT_NAME: "/MapForge"
  API_PROJECT_NAME: "/MapForge.API"
  EDITOR_PROJECT_NAME: "/MapForge.Editor"
  LABAPI_ASESEMBLY_NAME: "MapForge-labapi"
  SL_REFERENCES: "${{ github.workspace }}/References"
  UNITY_REFERENCES: "${{ github.workspace }}/References"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout main repository.
      uses: actions/checkout@v4
      
    - name: Get Release Info
      id: release-info
      uses: zoexx/github-action-json-file-properties@b9f36ce6ee6fe2680cd3c32b2c62e22eade7e590
      with: 
          file_path: "${{ github.workspace }}/releaseInfo.json"
          
    - name: Set Environment Variables
      run: |
        echo "version=${{ steps.release-info.outputs.version }}" >> $GITHUB_ENV
        echo "gameAssemblyReferences=${{ steps.release-info.outputs.gameAssemblyReferences }}" >> $GITHUB_ENV
        echo "publicizeAssemblies=${{ steps.release-info.outputs.publicizeAssemblies }}" >> $GITHUB_ENV
        
    - name: Download SCP SL References
      uses: killers0992/scpsl.downloadfiles@master
      with:
        branch: 'labapi-beta'
        filesToDownload: ${{ env.gameAssemblyReferences }}
        
    - name: Publicize Assemblies
      uses: killers0992/scpsl.assemblypublicizer@master
      with:
        assemblies: ${{ env.publicizeAssemblies }}
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x
        
    - name: Build API
      run: dotnet build ${{ github.workspace }}${{ env.API_PROJECT_NAME }}/MapForge.API.csproj --configuration Release
      
    - name: Build LABAPI
      run: dotnet build ${{ github.workspace }}${{ env.PROJECT_NAME }}/MapForge.csproj --configuration LABAPI

    - name: Build Editor
      run: dotnet build ${{ github.workspace }}${{ env.EDITOR_PROJECT_NAME }}/MapForge.Editor.csproj --configuration Release

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: MapForge
        path: |
          ${{ github.workspace }}${{ env.PROJECT_NAME }}/bin/LABAPI/${{ env.NET_FRAMEWORK_VERSION }}/${{ env.LABAPI_ASESEMBLY_NAME }}.dll
          ${{ github.workspace }}${{ env.API_PROJECT_NAME }}/bin/Release/${{ env.NET_FRAMEWORK_VERSION }}/MapForge.API.dll
          
    - run: |
        cd ${{ github.workspace }}
        find Packages -name \*.meta >> metaList
        cp ${{ github.workspace }}${{ env.API_PROJECT_NAME }}/bin/Release/${{ env.NET_FRAMEWORK_VERSION }}/MapForge.API.dll ${{ github.workspace }}/Packages/com.killers0992.mapforge/Runtime/MapForge.API.dll
        cp ${{ github.workspace }}${{ env.EDITOR_PROJECT_NAME }}/bin/Release/${{ env.NET_FRAMEWORK_VERSION }}/MapForge.Editor.dll ${{ github.workspace }}/Packages/com.killers0992.mapforge/Editor/MapForge.Editor.dll

    - run: mkdir ${{ github.workspace }}/PackageOutput

    - uses: pCYSl5EDgo/create-unitypackage@master
      with:
        package-path: ${{ github.workspace }}/PackageOutput/com.killers0992.mapforge.unitypackage
        include-files: metaList
      
    - name: Create Tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: "${{ secrets.GITHUB_TOKEN }}"
        tag_prefix: ""
        custom_tag: "${{ env.version }}"
        
    - uses: vimtor/action-zip@v1.2
      with:
        files: ${{ env.API_PROJECT_NAME }}/bin/Release/${{ env.NET_FRAMEWORK_VERSION }}/MapForge.API.dll ${{ env.PROJECT_NAME }}/bin/LABAPI/${{ env.NET_FRAMEWORK_VERSION }}/0Harmony.dll
        dest: dependencies.zip

    - name: Make Release
      uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
      with:
        files: |
          ${{ github.workspace }}/dependencies.zip
          ${{ github.workspace }}${{ env.PROJECT_NAME }}/bin/LABAPI/${{ env.NET_FRAMEWORK_VERSION }}/${{ env.LABAPI_ASESEMBLY_NAME }}.dll
          ${{ github.workspace }}/PackageOutput/com.killers0992.mapforge.unitypackage
          ${{ github.workspace }}/releaseInfo.json
        tag_name: ${{ env.version }}
